import axios from 'axios'

const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:5000'

const api = axios.create({
  baseURL: API_URL,
  timeout: 30000,
})

// Intercepteur pour g√©rer les erreurs
api.interceptors.response.use(
  (response) => response,
  (error) => {
    console.error('Erreur API:', error)
    return Promise.reject(error)
  }
)

// R√©cup√©rer la liste des vid√©os (exclut downloads)
export const getVideos = async () => {
  try {
    const response = await api.get('/api/videos')
    console.log('üì∫ Vid√©os r√©cup√©r√©es:', response.data.length)
    return response.data
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des vid√©os:', error)
    throw error
  }
}

// R√©cup√©rer la liste des films uniquement (dossier films)
export const getFilms = async () => {
  try {
    const response = await api.get('/api/films')
    console.log('üé¨ Films r√©cup√©r√©s:', response.data.length)
    return response.data
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des films:', error)
    throw error
  }
}

// R√©cup√©rer les m√©tadonn√©es d'une vid√©o sp√©cifique
export const getVideoMetadata = async (videoPath) => {
  try {
    // videoPath est maintenant le chemin relatif complet (ex: "films/Final Destination/Final.mp4")
    const response = await api.get(`/api/videos/${encodeURIComponent(videoPath)}/metadata`)
    return response.data
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des m√©tadonn√©es:', error)
    throw error
  }
}

// G√©n√©rer l'URL de streaming pour une vid√©o
export const getVideoStreamUrl = (videoPath) => {
  // videoPath est maintenant le chemin relatif complet
  return `${API_URL}/api/video/${encodeURIComponent(videoPath)}`
}

export const getSeries = async () => {
  try {
    const response = await fetch(`${API_URL}/api/series`)
    if (!response.ok) {
      throw new Error(`Erreur HTTP: ${response.status}`)
    }
    return await response.json()
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des s√©ries:', error)
    throw error
  }
}

export default api 